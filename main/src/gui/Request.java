/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package gui;

import db.*;
import dbfunctions.*;
import feature.*;
import java.util.*;
import javax.swing.*;
import main.home;
import test.*;
/**
 *
 * @author sumit
 */
public class Request extends javax.swing.JPanel {
    AuthorSuggest asb;
    PublisherSuggest psb;
    BisacSuggest bs;
    BookSuggest bsm;
    Publisher publisher;
    Book selectedBook;
    public home original;
    public bookdetails bookd;
    public int flag;
    
    /**
     * Creates new form Request
     */
    public Request(home h,bookdetails bd,int status) {
        initComponents();
        original =h;
        flag=status;
        bookd=bd;
        
        comboboxtitle.setEditable(true);
        bsm=new BookSuggest(comboboxtitle);
        comboboxtitle.setModel(bsm);
        comboboxtitle.addItemListener(bsm);
        
        Manager manager=new Manager();
        AuthorSuggestBox.setEditable(true);
        asb=new AuthorSuggest(AuthorSuggestBox);
        AuthorSuggestBox.setModel(asb);
        AuthorSuggestBox.addItemListener(asb);
        
        PubSuggesBo.setEditable(true);
        psb=new PublisherSuggest(PubSuggesBo);
        PubSuggesBo.setModel(psb);
        PubSuggesBo.addItemListener(psb);
        
        publisherField.setEnabled(false);
        addRequestButton.setEnabled(false);
        if(flag==0)
        {
            comboboxtitle.setEnabled(false);
            comboboxtitle.getEditor().setItem(bd.currentBook.getTitle());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        publisherField = new javax.swing.JTextField();
        comboboxtitle = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        AuthorSuggestBox = new javax.swing.JComboBox();
        PubSuggesBo = new javax.swing.JComboBox();
        addRequestButton = new javax.swing.JButton();

        jLabel1.setText("BOOK TITLE  :");

        jLabel7.setText("Publisher");

        jLabel6.setText("Author");

        jLabel2.setText("PUBLISHER  :");

        publisherField.setEditable(false);

        comboboxtitle.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jButton1.setText("Check");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        AuthorSuggestBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        AuthorSuggestBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AuthorSuggestBoxActionPerformed(evt);
            }
        });

        PubSuggesBo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        addRequestButton.setText("Add Request");
        addRequestButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addRequestButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(AuthorSuggestBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(publisherField)
                            .addComponent(comboboxtitle, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(PubSuggesBo, javax.swing.GroupLayout.PREFERRED_SIZE, 525, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(197, 197, 197)
                        .addComponent(addRequestButton, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(64, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboboxtitle, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(publisherField, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AuthorSuggestBox, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PubSuggesBo, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addComponent(addRequestButton, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(79, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if(flag==1)
        {
            if(!bsm.database.isEmpty())
            {
                selectedBook=bsm.database.get(comboboxtitle.getSelectedIndex());
                publisherField.setText(selectedBook.getPublisher().getName());
                PubSuggesBo.getEditor().setItem(selectedBook.getPublisher().getName());
            }
            else
            {
                publisherField.setText("No book in inventory!!");
            }
        }
        else if(flag==0){
                publisherField.setText(bookd.currentBook.getPublisher().getName());
                PubSuggesBo.getEditor().setItem(bookd.currentBook.getPublisher().getName());
            }
        addRequestButton.setEnabled(true);
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void addRequestButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addRequestButtonActionPerformed

        Book book=new Book();
        int bookindex=comboboxtitle.getSelectedIndex();
        if(bsm.database.isEmpty())
        {
            book.setTitle(comboboxtitle.getEditor().getItem().toString());
        }
        else
        {
            book.setTitle(bsm.database.get(bookindex).getTitle());
            selectedBook=bsm.database.get(bookindex);
        }

        Author author;
        String outString;

        if(!psb.database.isEmpty())
        {
            publisher=psb.database.get(PubSuggesBo.getSelectedIndex());
        }
            
        else
        {
            publisher=new Publisher(PubSuggesBo.getEditor().getItem().toString());
            outString="The publisher is not present previously";
        }
        if (PubSuggesBo.getEditor().getItem().toString()=="") {
           
            
        }

//        List<Author> authors=new LinkedList<>();
//        if(!asb.database.isEmpty())
//            authors.add(asb.database.get(AuthorSuggestBox.getSelectedIndex()));
//        else
//        {
//            String authorinputString=AuthorSuggestBox.getEditor().getItem().toString();
//            String[] strings=authorinputString.split(",");
//            for (String string : strings) {
//                System.out.println(string);
//            }
//            authors=Authorf.getAuthorList(strings);
//        }

        book.setPublisher(publisher);
        Library.requestBook(book, 1);
       JOptionPane.showMessageDialog(null, "Succesfully reserved for you");
       if(flag==0)
           original.setscrollpanebooks(bookd);
       else if(flag==1)
           original.addtrendingbooks();
    }//GEN-LAST:event_addRequestButtonActionPerformed

    private void AuthorSuggestBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AuthorSuggestBoxActionPerformed

    }//GEN-LAST:event_AuthorSuggestBoxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox AuthorSuggestBox;
    private javax.swing.JComboBox PubSuggesBo;
    private javax.swing.JButton addRequestButton;
    private javax.swing.JComboBox comboboxtitle;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JTextField publisherField;
    // End of variables declaration//GEN-END:variables
}
